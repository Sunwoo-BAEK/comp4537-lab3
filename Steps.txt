/**
 * Lab3 Breakdown:
 *  - A: Debugging
 *  - B: GET request server-rendered app
 *  - C: Write and read files remotely
 */

/**
 * Part A - Debugging:
 *  - create module math.js
 *      - two functions, add and subtract two numbers.
 *  - call math module from app.js
 *  - place a breakpoint
 *  - place a breakpoint with console.log like provided image.
 *  Notes:
 *      - use backtick format
 *      - replace YOURNAME with first name
 * 
 *  - take screenshot proving that breakpoint pauses desired line.
 *  - SUBMIT: BaekDebuggingLab3.jpg
 */

/**
 * Part B - GET request app:
 *  - App User Story:
 *      1. Send your name from browser, from address bar. (the "?" call.)
 *          e.g: yourDomainName.xyz/COMP4537/labs/3/getDate/?name=John**
 *      2. Server returns personalized and styled message.
 *          e.g: 
 *              "Hello John, What a beautiful day.
 *              Server current date and time is *
 *              Wed Sept 01 2023 12:52:14 GMT-0800
 *              (Pacific Standard Time)"
 *          - return time for server, blue text.
 *  - two files + 1:
 *      1. server.js
 *      2. ./modules/utils.js (which holds getDate())
 *      3. lang/en/en.js
 */

/**
 * Part C - Write and Read from file:
 *  Write:
 *      - Append a text to a file.
 *      - text from url.
 *      - "file.txt" is the name.
 *      - append means: if no file, create and store.
 *                      if file exists, add to bottom.
 *      - e.g: yourDomainName.xyz/COMP4537/labs/3/writeFile/?text=BCIT*
 * 
 *  Read:
 *      - Read from "file.txt",
 *      - return that string,
 *      - display on browser (no download).
 *      - Show 404 if file does not exist.
 *      - e.g: yourDomainName.xyz/COMP4537/labs/3/readFile/file.txt*
 */

/**
 * Deliverables
 *  A: BaekDebuggingLab3.jpg
 *  B: (1 url) in comments
 *  C: (2 urls) in comments
 *  BaekLab3.zip
 *      - Lab 3 files from root directory.
 */

/**
 * Rubric:
 *      - Don't forget httpS://
 *      - Part B returns blue text done by server.
 *      - Part B user message separate file
 *      - Fully OOP
 */

 Next Steps:
 - Make it OOP
 - Test it for bugs
 - Confirm rubrics
 - Host it
 - Test more
 - Submit